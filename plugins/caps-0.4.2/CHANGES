0.4.2
	* fixed the 'model' port index for AmpVTS in the RDF generator

0.4.1
	* cleaned up Eq.h and Eq.cc (many g++ versions choke on the unused code
		there)
	* changed -O3 to -O2 in the g++ invocation

0.4.0
	* ToneStack plugins, by David Yeh
	* AmpV + Tone stack plugin, employing David Yeh's fine work
	* comment cosmetics
	* Amp* denormal protection fixed (or is it, Dave? ;)
	* minor code cleanup in Amp.cc
	* caps.rdf updated with plugin categories (thanks to Paul Winkler)
	* caps.rdf Cabinet* RDF preset labels renamed
	* AutoWah plugin
	* DSP::RMS reworked, may affect Compress plugin
	* DSP::Eq reworked for double precision and denormal protection
	* ./configure.py checks SSE availability
	* in case of SSE math denormal flush to zero activated for all plugins
	* all plugins renamed C* .. instead of CAPS: ..
	* Eq modified to play nice with ardour 
	* Eq2x2
	* introduced the Plugin base class, collecting common traits (normal etc)
	* getport() -- read access to control ports which is clamped to port bounds
		and maps inf and nan to 0 as well
	* all LADSPA_HINT_SAMPLE_RATE ports changed to *_LOGARITHMIC because
		of broken implementations (no surprise given the vagueness of ladspa.h
		regarding this matter) -- this means changed default parameters of the 
		affected ports, too
	* VCO* "latency" output ports removed
	* actual activate() call is deferred to first run() after activate() 
		in order to prevent inadvertent parameter smoothing sweeps during the first 
		block	of audio after activation, this should fix all problems with ardour
		(except those caused by denormals or invalid audio input)
	* caps.rdf installed by 'make install'
	* fixed a bug in tools/make-ps.py that caused the spectrum plots to 
		be inaccurate for multi-channel plugins

0.3.0
	* TwelveAX7_3 changed to clip slightly early in the upper lobe
	* Scape plugin added
	* plugin names rewritten, prefixed with "CAPS:"
	* new ChorusII, StereoChorusII plugins
	* Chorus, StereoChorus relabeled, appended 'I' suffix
	* new PhaserII plugin (great stuff if I may say so)
	* Phaser relabeled, appended 'I' suffix
	* new AmpV plugin, based on AmpIII, emulates compression and distortion
		modulation through power supply shortcomings, plus lots of fine-tuning
		and an additional biquad. We're getting there!
	* all Preamp and Amp models fitted with a new 12AX7 model, linear
		interpolation of a sample table obtained from spice simulation

0.2.4
	* feedback default reverted to 0 for the Chorus units
	* fixed Cabinet to switch to correct gain at 'model' control change
	* fixed 'model' control in Cabinet to work with a broader range of hosts
	* Cabinet name changed to CabinetI
	* CabinetII plugin: Cabinet with 32nd order IIR filters, more fidelity
	  to the original frequency responses, supplied coefficients for 4 of the
		most used sample rates
	* applied the gcc-4 enabling patch
	* SweepVF renamed to SweepVFI
	* new SweepVFII plugin, variant of SweepVFI with Q modulated by a 
		second Lorenz fractal
	* dsp/exp2 dumped in favour of libm's exp2(3)

0.2.3
	* StereoChorus denormal protection made functional 
		(Thanks again to S. Savolainen)
	* Phaser denormal protected
	
0.2.2
	* Build was _not_ fixed for g++-4.0.
	* AmpIV gain control restored to operate as expected
	* Chorus/StereoChorus denormal protection (thanks to S. Savolainen)
	* a few cosmetic changes elsewhere
	
0.2.1
	* Build fixed for g++-4.0, PPC and AMD64 
		(Thanks to Niklas Werner, Andreas Jochens and Mario Lang)
	* Reverb.* cosmetics
	* AmpIV tone controls moved to after initial tube transfer

0.2.0
	* denormal protection for Preamp*, Amp*
	* Capitalized plugin Names
	* PDF now lists audio in- and outputs as well as control inputs, only
	  gives average CPU rating
	* AmpIV: PreampIV + power amp stage
	* Plate2x2: Plate with 2-in, 2-out audio routing
	* Plate damping and bandwidth controls changed to map to filter fc, fixes
		behaviour in hosts that handle the log hint incorrectly

0.1.13
	* AmpIII activate() resets the boost filter

0.1.12
	* PreampIV band controls fixed to operate as expected

0.1.11
	* amps changed back to old tube model :) but new temp & gain behaviour stays
	* SweepVF, AmpIII default value adjustments

0.1.10
	* HRTF recursion runs in doubles
	* Cabinet recursion runs in doubles for much clearer sound
	* all amps fitted with a common tube voltage mapping, dsp/TwelveAX7.h
	* all amps: temperature and gain controls changed slightly
	* all amps declared in one common Amp.h
	* Pan echo fixed to be filtered independent of sample rate
	* Cabinet cosmetics and activate() from port values fix
	* SweepVF fixed to activate() from the current control settings
	* rid all *amp* plugins of the initial hi-pass, not needed anymore
	* PreampIII and AmpIII more authentic with an rbj lo-shelve, +6 dB > 1.2 kHz
		as hinted by circuit analysis
	* something_random() removed, stdlib for random generation

0.1.9
	* Pan plugin
	* 'make depend' instead of 'make dep', uses $(CC) -MM instead of 'makedepend'
	* *Chorus, AmpIII, Plate defaults changed
	* *Chorus optimizations, reintroduces funny zipper noise when 'feedback' is
		non-zero and 't' is changed
	* experimental HRTF plugin
	* Plate 'blend' goes all the way to wet output only
	* dsp/White offers a get_31() method for reduced number of bitshifts needed
	* *Chorus delay line tapping changed to employ cubic interpolation, sounds
		better
	* SweepVF modulation mix algorithm changed to clamp if over-fed, makes
		for wider sweeps
	
0.1.8
	* all oversampling plugins use Kaiser windows instead of Blackman-Harris,
		for much better performance
	* SweepVF modulation range slightly increased
	* Cabinet filter loop cosmetics (slight speedup)
	* new AmpIII Plugin: Preamp plus power amp emulation
	* lowered NOISE_FLOOR (equals 'renormal' number)
	
0.1.7
	* connect ports to lower bound on instantiate()
	* Plate delay line lengths raised, sound changed
	* Eq activate() fixed to initialize from the current settings
	* Preamp* cutoff reverted to 0.1.3 setting, thanks to Ben Saylor for
		testing
	* old IIR-based Preamp cleaned from the sources
	* zipper-noise in *Chorus units for t changes with feedback > 0 eliminated
	* all plugin constructor code moved to init() calls

0.1.6
	* SweepVF modulation mix algorithm changed to maintain proportion, not
		absolute value if x + y + z > 1, for better control
	* create $(DEST) directory on make install, pointed out by Daniel James

0.1.5
	* fixed delay line length miscalculation in ModLattice

0.1.4
	* SweepVF modulation source can be mixed now
	* latency port for VCO*
	* Lorenz and Roessler get x, y, z mixing knobs
	* PreampIV eq bands slightly tuned and coefficients moved into common struct
	* Preamp*, VCO* downsampler filter cutoff lowered
	* Clip downsampler filter cutoff lowered 
	* nonsensical audio output bounds removed
	* simplified VCO* implementation
	* JVRev rewritten for code clarity (funny enough, it also got quicker)
	* fixed JVRev to reset its history on activate()
	* added purpose, copyright and licensing information to all (i think) files.
	* HACKING file
	* CHANGES file
	
0.1.3
	* fixed all compilation problems with gcc 3.3, with the patient help
		of the lad mailing list community
	* dsp/Eq.h SSE assembler code had to go (gcc > 3 doesn't like multi-line 
		asm, and efficiency and even reliability go down if we allow gcc to 
		intersperse its 'optimization' code with our asm)
	
0.1.2
	* fixed more compilation problems with gcc >= 3.0
	
0.1.1
	* tried to (but didn't really) fix compilation problem with ladspa.h
	
0.1.0
	* initial release
